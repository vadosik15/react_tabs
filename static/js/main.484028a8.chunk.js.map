{"version":3,"sources":["helper.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getSelectedTabById","tabs","selectedTabId","find","tab","id","Tabs","props","onTabSelected","selectedTab","className","map","title","isSelected","cn","href","onClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAqB,SAChCC,EACAC,GAFgC,OAIhCD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAAkBD,EAAK,I,OCKxCK,EAAkB,SAACC,GAC9B,IACEN,EAGEM,EAHFN,KACAC,EAEEK,EAFFL,cACAM,EACED,EADFC,cAGIC,EAAcT,EAAmBC,EAAMC,GAE7C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAP,GACR,IAAQC,EAAcD,EAAdC,GAAIO,EAAUR,EAAVQ,MACNC,EAAaR,IAAOI,EAAYJ,GAEtC,OACE,oBAEEK,UAAWI,IAAG,CACZ,YAAaD,IAEf,UAAQ,MALV,SAOE,mBACEE,KAAI,WAAMV,GACV,UAAQ,UACRW,QAAS,WACFH,GACHL,EAAcJ,IALpB,SASGQ,KAfEP,UAuBf,qBAAKK,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYQ,cC9CRhB,EAAc,CACzB,CAAEI,GAAI,QAASO,MAAO,QAASK,QAAS,eACxC,CAAEZ,GAAI,QAASO,MAAO,QAASK,QAAS,eACxC,CAAEZ,GAAI,QAASO,MAAO,QAASK,QAAS,gBAG7BC,EAAU,WACrB,MAA0CC,mBAASlB,EAAK,GAAGI,IAA3D,mBAAOH,EAAP,KAAsBkB,EAAtB,KACMX,EAAcT,EAAmBC,EAAMC,GAM7C,OACE,sBAAKQ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAYG,SAGlC,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfM,cAbkB,SAACJ,GACvBgB,EAAiBhB,EAAIC,WChBzBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.484028a8.chunk.js","sourcesContent":["import { Tab } from './components/Tabs/Types/Tab';\n\nexport const getSelectedTabById = (\n  tabs: Tab[],\n  selectedTabId: string,\n): Tab => (\n  tabs.find(tab => tab.id === selectedTabId) || tabs[0]\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Tab } from './Types/Tab';\nimport { getSelectedTabById } from '../../helper';\n\ninterface Props {\n  tabs: Tab[]\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void\n}\n\nexport const Tabs: FC<Props> = (props) => {\n  const {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  } = props;\n\n  const selectedTab = getSelectedTabById(tabs, selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n            const isSelected = id === selectedTab.id;\n\n            return (\n              <li\n                key={id}\n                className={cn({\n                  'is-active': isSelected,\n                })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (!isSelected) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './components/Tabs/Types/Tab';\nimport { Tabs } from './components/Tabs';\nimport { getSelectedTabById } from './helper';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTab = getSelectedTabById(tabs, selectedTabId);\n\n  const handleSelectTab = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleSelectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}